version: '3.8'

services:
  backend:
    build: 
      context: ./backend
      dockerfile: Dockerfile
    container_name: formflow-backend
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=postgresql://formflow:password@postgres:5432/formflow
      - REDIS_URL=redis://redis:6379
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - LEMONSQUEEZY_API_KEY=${LEMONSQUEEZY_API_KEY}
      - RESEND_API_KEY=${RESEND_API_KEY}
      - JWT_SECRET_KEY=${JWT_SECRET_KEY:-your-secret-key-here}
      - JWT_ALGORITHM=HS256
      - FRONTEND_URL=http://localhost:3000
      - BACKEND_URL=http://localhost:8000
    depends_on:
      - postgres
      - redis
    networks:
      - formflow-net
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  frontend:
    build: 
      context: ./frontend
      dockerfile: Dockerfile
      args:
        - NEXT_PUBLIC_API_URL=http://localhost:8000
    container_name: formflow-frontend
    ports:
      - "3000:3000"
    depends_on:
      - backend
    networks:
      - formflow-net
    restart: unless-stopped
    environment:
      - NEXT_PUBLIC_API_URL=http://localhost:8000

  postgres:
    image: postgres:15-alpine
    container_name: formflow-postgres
    environment:
      - POSTGRES_DB=formflow
      - POSTGRES_USER=formflow
      - POSTGRES_PASSWORD=password
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/scripts/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    ports:
      - "5432:5432"
    networks:
      - formflow-net
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U formflow"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: formflow-redis
    ports:
      - "6379:6379"
    networks:
      - formflow-net
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - redis_data:/data

  # Optional: Nginx reverse proxy for production-like setup
  nginx:
    image: nginx:alpine
    container_name: formflow-nginx
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/conf.d:/etc/nginx/conf.d:ro
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - backend
      - frontend
    networks:
      - formflow-net
    restart: unless-stopped

networks:
  formflow-net:
    driver: bridge

volumes:
  postgres_data:
  redis_data: